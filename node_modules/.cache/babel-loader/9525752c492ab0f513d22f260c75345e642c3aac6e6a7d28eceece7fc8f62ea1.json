{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swetha\\\\Desktop\\\\QuickSell_Assignment-master\\\\src\\\\components\\\\Navbar.jsx\";\n/*import React, { useState, useEffect, useRef } from 'react';\nimport { display_filter, down } from '../assets/images';\nimport '../App.css'\n\nfunction FilterDropdown({\n  selectedGrouping,\n  setSelectedGrouping,\n  selectedOrdering,\n  setSelectedOrdering,\n}) {\n  const [groupingOptions] = useState([\"user\", \"priority\", \"status\"]);\n  const [orderingOptions] = useState([\"priority\", \"title\"]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    // Add a click event listener to the document to close the dropdown when clicking outside\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const handleDropdownClick = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  const handleGroupingChange = (e) => {\n    setSelectedGrouping(e.target.value);\n  };\n\n  const handleOrderingChange = (e) => {\n    setSelectedOrdering(e.target.value);\n  };\n\n  return (\n    <div className=\"filter-dropdown-container\" ref={dropdownRef}>\n      <div className='display-button' onClick={handleDropdownClick}>\n        <img src={display_filter} alt=\"Display Filter Logo\" className=\"filter-logo\" />\n        Display\n        <img src={down} alt=\"Display Filter Logo\" className=\"down-logo\" />\n      </div>\n      {isDropdownOpen && (\n        <div className=\"filter-dropdown\">\n  <div className=\"filter-group\">\n    <label className=\"grouping\">\n      Grouping:\n    </label>\n    <select value={selectedGrouping} onChange={handleGroupingChange} className='select'>\n      {groupingOptions.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </div>\n\n  <div className=\"filter-group\">\n    <label className=\"ordering\">\n      Ordering:\n    </label>\n      <select value={selectedOrdering} onChange={handleOrderingChange} className='select'>\n      {orderingOptions.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </div>\n</div>\n\n      )}\n    </div>\n  );\n}\n\nexport default FilterDropdown;*/\nimport React from 'react';\nimport FilterDropdown from './FilterDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar({\n  selectedGrouping,\n  setSelectedGrouping,\n  selectedOrdering,\n  setSelectedOrdering\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(FilterDropdown, {\n      selectedGrouping: selectedGrouping,\n      setSelectedGrouping: setSelectedGrouping,\n      selectedOrdering: selectedOrdering,\n      setSelectedOrdering: setSelectedOrdering\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","FilterDropdown","jsxDEV","_jsxDEV","Navbar","selectedGrouping","setSelectedGrouping","selectedOrdering","setSelectedOrdering","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/swetha/Desktop/QuickSell_Assignment-master/src/components/Navbar.jsx"],"sourcesContent":["/*import React, { useState, useEffect, useRef } from 'react';\nimport { display_filter, down } from '../assets/images';\nimport '../App.css'\n\nfunction FilterDropdown({\n  selectedGrouping,\n  setSelectedGrouping,\n  selectedOrdering,\n  setSelectedOrdering,\n}) {\n  const [groupingOptions] = useState([\"user\", \"priority\", \"status\"]);\n  const [orderingOptions] = useState([\"priority\", \"title\"]);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    // Add a click event listener to the document to close the dropdown when clicking outside\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  const handleDropdownClick = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n\n  const handleGroupingChange = (e) => {\n    setSelectedGrouping(e.target.value);\n  };\n\n  const handleOrderingChange = (e) => {\n    setSelectedOrdering(e.target.value);\n  };\n\n  return (\n    <div className=\"filter-dropdown-container\" ref={dropdownRef}>\n      <div className='display-button' onClick={handleDropdownClick}>\n        <img src={display_filter} alt=\"Display Filter Logo\" className=\"filter-logo\" />\n        Display\n        <img src={down} alt=\"Display Filter Logo\" className=\"down-logo\" />\n      </div>\n      {isDropdownOpen && (\n        <div className=\"filter-dropdown\">\n  <div className=\"filter-group\">\n    <label className=\"grouping\">\n      Grouping:\n    </label>\n    <select value={selectedGrouping} onChange={handleGroupingChange} className='select'>\n      {groupingOptions.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </div>\n\n  <div className=\"filter-group\">\n    <label className=\"ordering\">\n      Ordering:\n    </label>\n      <select value={selectedOrdering} onChange={handleOrderingChange} className='select'>\n      {orderingOptions.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  </div>\n</div>\n\n      )}\n    </div>\n  );\n}\n\nexport default FilterDropdown;*/\nimport React from 'react';\nimport FilterDropdown from './FilterDropdown';\n\nfunction Navbar({\nselectedGrouping,\nsetSelectedGrouping,\nselectedOrdering,\nsetSelectedOrdering,\n}) {\n  return (\n    <div className=\"navbar\">\n    <FilterDropdown\n    selectedGrouping={selectedGrouping}\nsetSelectedGrouping={setSelectedGrouping}\nselectedOrdering={selectedOrdering}\nsetSelectedOrdering={setSelectedOrdering}\n/>\n</div>\n);\n}\n\nexport default Navbar;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,MAAMA,CAAC;EAChBC,gBAAgB;EAChBC,mBAAmB;EACnBC,gBAAgB;EAChBC;AACA,CAAC,EAAE;EACD,oBACEL,OAAA;IAAKM,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACvBP,OAAA,CAACF,cAAc;MACfI,gBAAgB,EAAEA,gBAAiB;MACvCC,mBAAmB,EAAEA,mBAAoB;MACzCC,gBAAgB,EAAEA,gBAAiB;MACnCC,mBAAmB,EAAEA;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEN;AAACC,EAAA,GAhBQX,MAAM;AAkBf,eAAeA,MAAM;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}