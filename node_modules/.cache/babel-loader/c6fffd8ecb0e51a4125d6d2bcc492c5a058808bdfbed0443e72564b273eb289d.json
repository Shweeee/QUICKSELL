{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swetha\\\\Desktop\\\\QuickSell_Assignment-master\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useMemo } from 'react';\nimport Display from './Display';\nimport '../App.css';\n\nfunction Dashboard({ users, tickets, selectedGrouping, selectedOrdering }) {\n  const groupedAndSortedTickets = useMemo(() => {\n    const groupedTickets = {};\n\n    const sortTickets = (a, b) => {\n      if (selectedOrdering === 'priority') {\n        return b.priority - a.priority;\n      }\n      return a.title.localeCompare(b.title);\n    };\n\n    tickets.forEach((ticket) => {\n      const groupKey =\n        selectedGrouping === 'user'\n          ? ticket.userId\n          : selectedGrouping === 'priority'\n            ? ticket.priority\n            : ticket.status;\n\n      groupedTickets[groupKey] = groupedTickets[groupKey] || [];\n      groupedTickets[groupKey].push(ticket);\n    });\n\n    Object.keys(groupedTickets).forEach((key) => {\n      groupedTickets[key].sort(sortTickets);\n    });\n\n    return groupedTickets;\n  }, [tickets, selectedGrouping, selectedOrdering]);\n\n  return (\n    <div className=\"dash-board\">\n      {Object.keys(groupedAndSortedTickets).map((key) => (\n        <Display\n          key={key}\n          title={key}\n          tickets={groupedAndSortedTickets[key]}\n          users={users}\n          selectedGrouping={selectedGrouping}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Dashboard;*/\n// Dashboard.js\nimport React, { useMemo } from 'react';\nimport Display from './Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  users,\n  tickets,\n  selectedGrouping,\n  selectedOrdering\n}) {\n  _s();\n  const groupedAndSortedTickets = useMemo(() => {\n    const groupedTickets = {};\n    const sortTickets = (a, b) => {\n      if (selectedOrdering === 'priority') {\n        return b.priority - a.priority;\n      }\n      return a.title.localeCompare(b.title);\n    };\n    tickets.forEach(ticket => {\n      const groupKey = selectedGrouping === 'user' ? ticket.userId : selectedGrouping === 'priority' ? ticket.priority : ticket.status;\n      groupedTickets[groupKey] = groupedTickets[groupKey] || [];\n      groupedTickets[groupKey].push(ticket);\n    });\n    Object.keys(groupedTickets).forEach(key => {\n      groupedTickets[key].sort(sortTickets);\n    });\n    return groupedTickets;\n  }, [tickets, selectedGrouping, selectedOrdering]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dash-board\",\n    children: Object.keys(groupedAndSortedTickets).map(key => /*#__PURE__*/_jsxDEV(Display, {\n      title: key,\n      tickets: groupedAndSortedTickets[key],\n      users: users,\n      selectedGrouping: selectedGrouping\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 1\n  }, this);\n}\n_s(Dashboard, \"O5CYFIs5Mq5+cZ3GtktddHohJec=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useMemo","Display","jsxDEV","_jsxDEV","Dashboard","users","tickets","selectedGrouping","selectedOrdering","_s","groupedAndSortedTickets","groupedTickets","sortTickets","a","b","priority","title","localeCompare","forEach","ticket","groupKey","userId","status","push","Object","keys","key","sort","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/swetha/Desktop/QuickSell_Assignment-master/src/components/Dashboard.jsx"],"sourcesContent":["/*import React, { useMemo } from 'react';\nimport Display from './Display';\nimport '../App.css';\n\nfunction Dashboard({ users, tickets, selectedGrouping, selectedOrdering }) {\n  const groupedAndSortedTickets = useMemo(() => {\n    const groupedTickets = {};\n\n    const sortTickets = (a, b) => {\n      if (selectedOrdering === 'priority') {\n        return b.priority - a.priority;\n      }\n      return a.title.localeCompare(b.title);\n    };\n\n    tickets.forEach((ticket) => {\n      const groupKey =\n        selectedGrouping === 'user'\n          ? ticket.userId\n          : selectedGrouping === 'priority'\n            ? ticket.priority\n            : ticket.status;\n\n      groupedTickets[groupKey] = groupedTickets[groupKey] || [];\n      groupedTickets[groupKey].push(ticket);\n    });\n\n    Object.keys(groupedTickets).forEach((key) => {\n      groupedTickets[key].sort(sortTickets);\n    });\n\n    return groupedTickets;\n  }, [tickets, selectedGrouping, selectedOrdering]);\n\n  return (\n    <div className=\"dash-board\">\n      {Object.keys(groupedAndSortedTickets).map((key) => (\n        <Display\n          key={key}\n          title={key}\n          tickets={groupedAndSortedTickets[key]}\n          users={users}\n          selectedGrouping={selectedGrouping}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Dashboard;*/\n// Dashboard.js\nimport React, { useMemo } from 'react';\nimport Display from './Display';\n\nfunction Dashboard({ users, tickets, selectedGrouping, selectedOrdering }) {\nconst groupedAndSortedTickets = useMemo(() => {\nconst groupedTickets = {};\n\n  const sortTickets = (a, b) => {\nif (selectedOrdering === 'priority') {\nreturn b.priority - a.priority;\n}\nreturn a.title.localeCompare(b.title);\n};\n\n  tickets.forEach((ticket) => {\nconst groupKey =\nselectedGrouping === 'user'\n? ticket.userId\n: selectedGrouping === 'priority'\n? ticket.priority\n: ticket.status;\n\n   groupedTickets[groupKey] = groupedTickets[groupKey] || [];\ngroupedTickets[groupKey].push(ticket);\n});\n\n  Object.keys(groupedTickets).forEach((key) => {\ngroupedTickets[key].sort(sortTickets);\n});\n\n  return groupedTickets;\n}, [tickets, selectedGrouping, selectedOrdering]);\n\nreturn (\n<div className=\"dash-board\">\n{Object.keys(groupedAndSortedTickets).map((key) => (\n<Display\nkey={key}\ntitle={key}\ntickets={groupedAndSortedTickets[key]}\nusers={users}\nselectedGrouping={selectedGrouping}\n/>\n))}\n</div>\n);\n}\n\nexport default Dashboard;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,gBAAgB;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC3E,MAAMC,uBAAuB,GAAGV,OAAO,CAAC,MAAM;IAC9C,MAAMW,cAAc,GAAG,CAAC,CAAC;IAEvB,MAAMC,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;MAChC,IAAIN,gBAAgB,KAAK,UAAU,EAAE;QACrC,OAAOM,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ;MAC9B;MACA,OAAOF,CAAC,CAACG,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC;IACrC,CAAC;IAECV,OAAO,CAACY,OAAO,CAAEC,MAAM,IAAK;MAC9B,MAAMC,QAAQ,GACdb,gBAAgB,KAAK,MAAM,GACzBY,MAAM,CAACE,MAAM,GACbd,gBAAgB,KAAK,UAAU,GAC/BY,MAAM,CAACJ,QAAQ,GACfI,MAAM,CAACG,MAAM;MAEZX,cAAc,CAACS,QAAQ,CAAC,GAAGT,cAAc,CAACS,QAAQ,CAAC,IAAI,EAAE;MAC5DT,cAAc,CAACS,QAAQ,CAAC,CAACG,IAAI,CAACJ,MAAM,CAAC;IACrC,CAAC,CAAC;IAEAK,MAAM,CAACC,IAAI,CAACd,cAAc,CAAC,CAACO,OAAO,CAAEQ,GAAG,IAAK;MAC/Cf,cAAc,CAACe,GAAG,CAAC,CAACC,IAAI,CAACf,WAAW,CAAC;IACrC,CAAC,CAAC;IAEA,OAAOD,cAAc;EACvB,CAAC,EAAE,CAACL,OAAO,EAAEC,gBAAgB,EAAEC,gBAAgB,CAAC,CAAC;EAEjD,oBACAL,OAAA;IAAKyB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAC1BL,MAAM,CAACC,IAAI,CAACf,uBAAuB,CAAC,CAACoB,GAAG,CAAEJ,GAAG,iBAC9CvB,OAAA,CAACF,OAAO;MAERe,KAAK,EAAEU,GAAI;MACXpB,OAAO,EAAEI,uBAAuB,CAACgB,GAAG,CAAE;MACtCrB,KAAK,EAAEA,KAAM;MACbE,gBAAgB,EAAEA;IAAiB,GAJ9BmB,GAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKP,CACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEN;AAACzB,EAAA,CA3CQL,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}